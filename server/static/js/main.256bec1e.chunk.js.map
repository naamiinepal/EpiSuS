{"version":3,"sources":["components/Name.tsx","components/Nav.tsx","components/Admin/index.jsx","constants.js","components/Admin/SelectionAdmin.jsx","components/Admin/Tweet.jsx","components/Admin/TweetCollectionAdminPanel.jsx","components/utility.js","components/AuthProvider.jsx","components/FilterProvider.jsx","components/BarChart.jsx","components/LineChart.jsx","components/Selection.jsx","components/Tweet.jsx","components/WordCloud.jsx","components/Tweets.jsx","components/FilteredContainer.jsx","components/Title.tsx","components/DataSection.jsx","components/Purpose.tsx","components/EndUser.jsx","components/Login.jsx","components/RequireAuth.jsx","App.tsx","index.tsx"],"names":["Name","className","Nav","Admin","months","columns","field","label","headerName","borderColor","areaColor","backgroundColor","description","SelectionAdmin","offset","topic","setOffset","setTopic","toggleReload","endUser","useState","offsetTemp","setOffsetTemp","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","filter","column","map","TextField","type","onKeyDown","key","Button","onClick","Tweet","row","verified","action","changedColumn","setChangedColumn","isVerified","setIsVerified","display","message","intent","snackOpen","setSnackOpen","useEffect","verifySubmit","toSubmit","prop","accessToken","sessionStorage","getItem","axios","patch","headers","Authorization","then","handleClose","console","log","TableRow","sx","border","datum","index","TableCell","fontSize","align","Checkbox","checked","changeTemp","JSON","parse","stringify","handleChange","Snackbar","open","autoHideDuration","onClose","Alert","severity","width","variant","catch","color","disabled","TweetCollectionAdminPanel","dataList","setDataList","reload","setReload","get","data","TableContainer","component","Paper","height","Table","stickyHeader","minWidth","borderSpacing","TableHead","fontWeight","TableBody","Boolean","loggedInOrNot","parsedJwt","token","baseSplit","split","length","Error","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","Date","now","exp","invalid","parseJwt","removeItem","sub","AuthContext","createContext","AuthProvider","children","user","setUser","signin","username","password","callback","a","config","params","URLSearchParams","append","post","setItem","access_token","signout","Provider","useAuth","useContext","FilterContext","React","FilterProvider","year","setYear","month","setMonth","useFilter","optionsBar","responsive","indexAxis","maintainAspectRatio","plugins","legend","title","text","BarChart","setData","loading","setLoading","dataTemp","push","count","sort","b","labels","datasets","Card","options","ChartJS","register","ArcElement","CategoryScale","LinearScale","PointElement","LineElement","Title","BarElement","zoomPlugin","Tooltip","Legend","Filler","cubicInterpolationMode","position","tooltip","cornerRadius","zoom","wheel","enabled","drag","mode","scales","x","y","stacked","fetchLabels","finalData","created_date","substring","parseInt","covid_stats","vaccination","covid_politics","humour","lockdown","civic_views","others","dataArrays","life_during_pandemic","covid_waves_and_variants","fill","error","LineChart","setLabels","chartRef","useRef","label2","ref","Selection","multiple","renderValue","selected","Box","flexWrap","gap","Chip","indexOf","ListItemText","primary","tweet","isEditOpen","setIsEditOpen","created_at","getMonth","getDate","getFullYear","Object","keys","col","rowElement","marginLeft","FormGroup","FormControlLabel","control","WordCloud","words","setWords","counts","setCounts","wordsTemp","countTemp","Tweets","topics","setTopics","forEach","dl","dataLength","next","hasMore","loader","endMessage","style","textAlign","FilteredContainer","yearTemp","setYearTemp","monthTemp","setMonthTemp","mon","idx","size","DataSection","Purpose","EndUser","Login","setUsername","setPassword","navigate","useNavigate","location","useLocation","auth","DialogTitle","onSubmit","e","preventDefault","from","state","pathname","InputLabelProps","shrink","RequireAuth","to","App","path","element","container","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.256bec1e.chunk.js","sourcesContent":["const Name = () => (\n  <div className=\"font-bold text-primary ml-3 text-2xl\">\n    {/* EpiSus */}\n    Epidemiological Surveillance System\n    {/* <KeyboardArrowDownIcon /> */}\n  </div>\n);\n\nexport default Name;\n","import Name from \"./Name\";\n// import TULogo from \"../images/TULogo.png\"\n// import NaamiiLogo from \"../images/naamii-logo.png\"\n\nconst Nav = () => {\n    return (\n        <div className='border-2 bg-white px-16 py-2 flex items-center justify-between'>\n            <div className='font-bold w-14'>\n            {/* <Corona /> */}\n            {/* <img alt=\"TU-Logo\" src={TULogo} /> */}\n\n            </div>\n            <Name />\n                        <div className='w-14'>\n\n            {/* <img alt=\"TU-Logo\" src={NaamiiLogo} /> */}\n            </div>\n        </div>\n    )\n}\n\nexport default Nav\n","import { Outlet } from \"react-router\";\nimport Nav from \"../Nav\";\n\nconst Admin = () => {\n  return (\n    <div>\n      <Nav />\n      {/* <TweetCollectionAdminPanel action=\"verify\" /> */}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Admin;\n","const baseAddress = \"http://localhost:8000\";\nconst months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\nconst columns = [\n    {\n        field: \"text\",\n        label: \"Text\",\n        headerName: \"text\",\n    },\n    {\n        field: \"covid_stats\",\n        label: \"Covid Stats\",\n        borderColor: \"#390ba4\",\n        areaColor:\"#00429d\",\n        backgroundColor: \"#f77189\",\n        headerName: \"covid \\n stats\",\n        description:\n            \" Statistics about new cases, deaths, total cases, tests, casualties, etc.\",\n    },\n    {\n        field: \"vaccination\",\n        label: \"Vaccination\",\n        borderColor: \"#8c0096\",\n        areaColor:\"#3f69af\",\n        backgroundColor: \"#d58c32\",\n        headerName: \"vaccination\",\n        description: \"Serious information regarding vaccination.\",\n    },\n    {\n        field: \"covid_politics\",\n        label: \"Covid Politics\",\n        areaColor:\"#6592bf\",\n        borderColor: \"#bf0082\",\n        backgroundColor: \"#a4a031\",\n        headerName: \"covid \\n politics\",\n        description:\n            \"National and International politics closely concerned with Covid.\",\n    },\n    {\n        field: \"humour\",\n        label: \"Humour\",\n        borderColor: \"#e2006a\",\n        areaColor:\"#8bbdcc\",\n        backgroundColor: \"#50b131\",\n        headerName: \"humour\",\n        description: \"Satire, humour related to Covid.\",\n    },\n    {\n        field: \"lockdown\",\n        label: \"Lockdown\",\n        borderColor: \"#f90151\",\n        backgroundColor: \"#34ae91\",\n        areaColor:\"#dfdfc1\",\n        headerName: \"lockdown\",\n        description:\n            \"Information regarding lockdown, nisedhagyas, exams during lockdown.\",\n    },\n    {\n        field: \"civic_views\",\n        label: \"Civic Views\",\n        borderColor: \"#ff5039\",\n        backgroundColor: \"#37abb5\",\n        areaColor:\"#007ead\",\n        headerName: \"civic \\n views\",\n        description: \"General views, suggestions, rants from the public.\",\n    },\n    {\n        field: \"life_during_pandemic\",\n        label: \"Life During Pandemic\",\n        borderColor: \"#ff7e1f\",\n        areaColor:\"#c7a861\",\n        backgroundColor: \"#3ba3ec\",\n        headerName: \"Life During \\nPandemic\",\n        description: \"Effect of covid on day-to-day activities of the public.\",\n    },\n    {\n        field: \"covid_waves_and_variants\",\n        borderColor: \"#ffa600\",\n        backgroundColor: \"#bb83f4\",\n        areaColor:\"#d08769\",\n        label: \"Covid Waves and Variants\",\n        headerName: \"Covid Waves \\n and \\n Variants\",\n        description: \"Different waves and variants of the virus.\",\n    },\n    {\n        field: \"others\",\n        borderColor: \"#ffa600\",\n        backgroundColor: \"#f564d4\",\n        label: \"Others\",\n        areaColor:\"#bd717a\",\n        headerName: \"Others\",\n        description: \"Not related to any Covid Categories,\",\n    },\n    {field: \"verify\", label: \"Verify\", headerName: \"Verify\"},\n];\nexport {baseAddress, columns, months};\n","import { Button, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { columns } from \"../../constants\";\n\nconst SelectionAdmin = ({\n  offset,\n  topic,\n  setOffset,\n  setTopic,\n  toggleReload,\n  endUser = false,\n}) => {\n  const [offsetTemp, setOffsetTemp] = useState(offset);\n  return (\n    <div className=\"w-5/12 flex justify-between items-end mb-3\">\n      <div className=\"w-1/2\">\n        <InputLabel id=\"minority\">Topic</InputLabel>\n        <Select\n          labelId=\"minority\"\n          id=\"minority-select\"\n          value={topic}\n          label=\"Topic\"\n          onChange={(event) => {\n            setTopic(event.target.value);\n          }}\n        >\n          <MenuItem value=\"none\">All</MenuItem>\n          {columns\n            .filter(\n              (column) => column.field !== \"verify\" && column.field !== \"text\"\n            )\n            .map((column) => (\n              <MenuItem value={column.field}>{column.label}</MenuItem>\n            ))}\n        </Select>\n      </div>\n      {!endUser && (\n        <>\n          <TextField\n            label={\"Offset\"}\n            value={offsetTemp}\n            type={\"number\"}\n            onChange={(event) => {\n              setOffsetTemp(event.target.value);\n            }}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                setOffset(offsetTemp);\n              }\n            }}\n          />\n          <Button\n            onClick={() => {\n              toggleReload();\n            }}\n          >\n            Refuel\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SelectionAdmin;\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Snackbar,\n  TableCell,\n  TableRow,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { columns } from \"../../constants\";\n\nconst Tweet = ({ row, verified, action }) => {\n  const [changedColumn, setChangedColumn] = useState({ ...row });\n  const [isVerified, setIsVerified] = useState(verified);\n  const [snackOpen, setSnackOpen] = useState({\n    display: false,\n    message: \"\",\n    intent: \"success\",\n  });\n  useEffect(() => {\n    setChangedColumn({ ...row });\n    setIsVerified(verified);\n  }, [row, verified]);\n  const modifySubmit = () => {\n    let toSubmit = {};\n    for (const prop in row) {\n      toSubmit[prop] = changedColumn[prop];\n    }\n    let accessToken = sessionStorage.getItem(\"accessToken\");\n    axios\n      .patch(`/tweets/${row.id}`, toSubmit, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n      .then(() => {\n        setSnackOpen({\n          display: true,\n          message: \"Successfully Modified\",\n          intent: \"success\",\n        });\n      })\n      .catch(() => {\n        setSnackOpen({\n          display: false,\n          message: \"Modification Failed\",\n          intent: \"error\",\n        });\n      });\n  };\n  const verifySubmit = () => {\n    let toSubmit = {};\n    for (const prop in row) {\n      if (row[prop] !== changedColumn[prop]) {\n        toSubmit[prop] = changedColumn[prop];\n      }\n    }\n    let accessToken = sessionStorage.getItem(\"accessToken\");\n    axios\n      .patch(`/pseudo_tweets/${row.id}`, toSubmit, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n      .then(() => {\n        setIsVerified(true);\n      });\n  };\n  const handleClose = () => {\n    console.log(\"Closed\");\n    setSnackOpen({ ...snackOpen, display: false });\n  };\n  const handleChange = (event, column) => {\n    let changeTemp = JSON.parse(JSON.stringify(changedColumn));\n    changeTemp[column] = event.target.checked;\n    console.log(changeTemp);\n    setChangedColumn(changeTemp);\n  };\n  return (\n    <TableRow\n      key={row.id}\n      sx={{\n        \"&:last-child td, &:last-child th\": { border: 0 },\n      }}\n    >\n      {columns\n        .map((column) => column.field)\n        .filter((datum) => datum !== \"verify\" && datum !== \"others\")\n        .map((datum, index) => {\n          if (datum === \"text\")\n            return (\n              <TableCell key={index} sx={{ fontSize: \"1rem\" }} align=\"left\">\n                {row[datum]}\n              </TableCell>\n            );\n          else\n            return (\n              <TableCell key={index} align=\"right\">\n                <Checkbox\n                  checked={changedColumn[datum]}\n                  onChange={(event) => {\n                    handleChange(event, datum);\n                  }}\n                />\n              </TableCell>\n            );\n        })}\n      <TableCell align=\"right\">\n        {action === \"modify\" ? (\n          <>\n            <Snackbar\n              open={snackOpen.display}\n              autoHideDuration={3000}\n              onClose={handleClose}\n            >\n              <Alert\n                onClose={handleClose}\n                severity={snackOpen.intent}\n                sx={{ width: \"100%\" }}\n              >\n                {snackOpen.message}\n              </Alert>\n            </Snackbar>\n            <Button variant=\"contained\" onClick={modifySubmit}>\n              Modify\n            </Button>\n          </>\n        ) : (\n          <>\n            {isVerified ? (\n              <Button\n                color=\"success\"\n                disabled={action === \"verify\" && isVerified}\n                // variant=\"contained\"\n                onClick={verifySubmit}\n              >\n                Verified\n              </Button>\n            ) : (\n              <Button variant=\"contained\" onClick={verifySubmit}>\n                Verify\n              </Button>\n            )}\n          </>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Tweet;\n","import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { columns } from \"../../constants\";\n// import Selection from \"../Selection\";\nimport SelectionAdmin from \"./SelectionAdmin\";\nimport Tweet from \"./Tweet\";\n// const buttonRef = React.createRef();\n\nconst TweetCollectionAdminPanel = ({ action }) => {\n  const [dataList, setDataList] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [topic, setTopic] = useState(\"none\");\n  const [reload, setReload] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(\n        `/${\n          action === \"verify\" ? \"pseudo_tweets\" : \"tweets\"\n        }/?offset=${offset}&limit=10${\n          topic !== `none` ? `&topics=${topic}` : \"\"\n        }&maximize_labels=false`\n      )\n      .then((data) => data.data)\n      .then((data) => {\n        // console.log(\"Tweet Collection\", data);\n        setDataList(data);\n      });\n  }, [offset, topic, reload, action]);\n\n  const toggleReload = () => {\n    setReload(!reload);\n  };\n\n  return (\n    <div className=\" mt-10 w-11/12 mx-auto \">\n      <SelectionAdmin\n        offset={offset}\n        setOffset={setOffset}\n        topic={topic}\n        toggleReload={toggleReload}\n        setTopic={setTopic}\n      />\n      <TableContainer component={Paper} sx={{ height: 500 }}>\n        <Table\n          stickyHeader\n          sx={{ minWidth: 650, borderSpacing: \"0 20px\" }}\n          aria-label=\"simple table\"\n        >\n          <colgroup>\n            <col width=\"80%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"2%\" />\n            <col width=\"6%\" />\n          </colgroup>\n          <TableHead>\n            <TableRow>\n              {columns\n                .filter((column) => column.field !== \"others\")\n                .map((column, index) => {\n                  return (\n                    <TableCell\n                      key={index}\n                      sx={{\n                        width: 50,\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {column.headerName}\n                    </TableCell>\n                  );\n                })}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {dataList.map((row, index) => (\n              <Tweet\n                key={index}\n                row={{ ...row }}\n                action={action}\n                verified={Boolean(row[\"verified_at\"])}\n              />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default TweetCollectionAdminPanel;\n","function loggedInOrNot() {\n\n  // NOTE: This means The refresh token has not expired yet\n  const accessToken = sessionStorage.getItem(\"accessToken\");\n  console.log(\"AccessToken\", accessToken)\n  if (accessToken) {\n    const parsedJwt = parseJwt(accessToken);\n    if (parsedJwt.invalid) {\n    console.log(\"AccessToken\", parsedJwt.invalid)\n      console.log(\"Invalid access token.\");\n      sessionStorage.removeItem(\"accessToken\");\n      return false\n    } else if (\"sub\" in parsedJwt) {\n  console.log(\"AccessToken Check\", parsedJwt)\n\n      return parsedJwt.sub;\n    }\n  }\n  \n}\n\n/**\n *\n * Parses Jwt. **Doesn't throw any exception**\n * @param {string} token\n * @returns {object}\n */\nfunction parseJwt(token) {\n  try {\n    const baseSplit = token.split(\".\");\n    if (baseSplit.length !== 3) throw new Error(\"Token has been tampered\");\n    const base64 = baseSplit[1].replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(\n      atob(base64)\n        .split(\"\")\n        .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\n        .join(\"\")\n    );\n    let parsedJwt = JSON.parse(jsonPayload);\n    if (Date.now() > parsedJwt.exp * 1000) {\n      throw new Error(\"Token expired\");\n    }\n\n    return { ...parsedJwt, invalid: false };\n  } catch {\n    return { invalid: true };\n  }\n}\n\nexport { loggedInOrNot, parseJwt };\n","import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { createContext } from \"react\";\nimport { loggedInOrNot } from \"./utility\";\n\nlet AuthContext = createContext(null);\n\nexport default function AuthProvider({ children }) {\n  let [user, setUser] = useState(loggedInOrNot());\n  let signin = async (username, password, callback) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n    const params = new URLSearchParams();\n    params.append(\"username\", username);\n    params.append(\"password\", password);\n\n    return axios\n      .post(\"/auth/login\", params, config)\n      .then((data) => data.data)\n      .then((data) => {\n        sessionStorage.setItem(\"accessToken\", data.access_token);\n        setUser(loggedInOrNot());\n        callback();\n      });\n  };\n\n  let signout = (callback) => {\n    return \"Signed Out\";\n  };\n\n  let value = { user, signin, signout };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n","import React, { useContext, useState } from \"react\";\n\nlet FilterContext = React.createContext();\nconst FilterProvider = ({ children }) => {\n  const [year, setYear] = useState(\"none\");\n  const [month, setMonth] = useState(\"none\");\n  let value = { year, month, setYear, setMonth };\n  return (\n    <FilterContext.Provider value={value}>{children}</FilterContext.Provider>\n  );\n};\n\nexport default FilterProvider;\nexport function useFilter() {\n  return useContext(FilterContext);\n}\n","import { Card } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { months } from \"../constants\";\nimport { useFilter } from \"./FilterProvider\";\n\nconst optionsBar = {\n  responsive: true,\n  indexAxis: \"y\",\n  maintainAspectRatio: false,\n\n  // barThickness: 6,\n  plugins: {\n    legend: {\n      // position: 'top',\n      // display: true,\n    },\n    title: {\n      display: true,\n      text: \"Bar Graph\",\n    },\n  },\n};\nconst BarChart = () => {\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  let { year, month } = useFilter();\n  useEffect(() => {\n    let params = new URLSearchParams([[\"all\", true]]);\n    if (year !== \"none\" && month !== \"none\") {\n      params.append(\"month\", `${year}-${month}`);\n    }\n    axios\n      .get(`/pseudo_tweets/count`, { params })\n      .then((data) => data.data)\n      .then((data) => {\n        let dataTemp = [];\n        for (let key in data) {\n          if (key !== \"total\") {\n            dataTemp.push({ label: key, count: data[key] });\n          }\n        }\n\n        dataTemp.sort((a, b) => b.count - a.count);\n        console.log(\"Bar\", dataTemp);\n\n        setData({\n          labels: dataTemp.map((datum) => datum.label),\n          datasets: [\n            {\n              label: `Total Tweets Count of ${\n                months[month - 1] ? months[month - 1] : \"All\"\n              }`,\n              data: dataTemp.map((datum) => datum.count),\n              backgroundColor: \"#247881\",\n            },\n          ],\n        });\n        setLoading(true);\n      });\n  }, [year, month]);\n  return (\n    <>\n      {loading && (\n        <Card className=\"w-1/3 ml-3\">\n          <Bar options={optionsBar} data={data} />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default BarChart;\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  ArcElement,\n  Tooltip,\n  Legend,\n  Filler,\n  BarElement,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Card } from \"@mui/material\";\nimport { columns } from \"../constants\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nimport { useFilter } from \"./FilterProvider\";\nimport BarChart from \"./BarChart\";\n\n// import faker from 'faker';\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  BarElement,\n  zoomPlugin,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst options = {\n  responsive: true,\n  cubicInterpolationMode: \"monotone\",\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    tooltip: { cornerRadius: 0 },\n    title: {\n      display: true,\n      text: \"Line Chart\",\n    },\n\n    zoom: {\n      zoom: {\n        wheel: {\n          enabled: false,\n        },\n        drag: {\n          enabled: false,\n        },\n        mode: \"x\",\n      },\n    },\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: \"Day\",\n      },\n    },\n    y: {\n      stacked: true,\n      title: {\n        display: true,\n        text: \"Tweet Count\",\n      },\n    },\n  },\n};\n\nconst optionsPie = {\n  responsive: true,\n  indexAxis: \"y\",\n  maintainAspectRatio: false,\n\n  // barThickness: 6,\n  plugins: {\n    legend: {\n      // position: 'top',\n      // display: true,\n    },\n    title: {\n      display: true,\n      text: \"Bar Graph\",\n    },\n  },\n};\n\nconst fetchLabels = async (year, month) =>\n  axios\n    .get(`/pseudo_tweets/overview?all=true`)\n    .then((data) => data.data)\n    .then((data) => {\n      const finalData = {};\n      if (data) {\n        console.log(data[0].created_date.substring(5, 7));\n\n        if (year !== \"none\" && month !== \"none\") {\n          data = data.filter(\n            (datum) =>\n              parseInt(datum.created_date.substring(0, 4)) === parseInt(year) &&\n              parseInt(datum.created_date.substring(5, 7)) === parseInt(month)\n          );\n        }\n      }\n\n      const covid_stats = data.map((datum) => datum.covid_stats);\n      const vaccination = data.map((datum) => datum.vaccination);\n      const covid_politics = data.map((datum) => datum.covid_politics);\n      const humour = data.map((datum) => datum.humour);\n      const lockdown = data.map((datum) => datum.lockdown);\n      const civic_views = data.map((datum) => datum.civic_views);\n      const others = data.map((datum) => datum.others);\n      const life_during_pandemic = data.map(\n        (datum) => datum.life_during_pandemic\n      );\n      const covid_waves_and_variants = data.map(\n        (datum) => datum.covid_waves_and_variants\n      );\n      const dataArrays = {\n        covid_stats: covid_stats,\n        vaccination: vaccination,\n        covid_politics: covid_politics,\n        humour: humour,\n        lockdown: lockdown,\n        civic_views: civic_views,\n        life_during_pandemic: life_during_pandemic,\n        covid_waves_and_variants: covid_waves_and_variants,\n        others: others,\n      };\n      finalData[\"labels\"] = data.map((datum) => datum.created_date);\n      finalData[\"datasets\"] = columns\n        .filter(\n          (column) => column.field !== \"text\" && column.field !== \"verify\"\n        )\n        .map((column) => {\n          return {\n            data: dataArrays[column.field],\n            label: column.label,\n            fill: true,\n            borderColor: column.areaColor,\n            backgroundColor: column.areaColor,\n          };\n        });\n\n      console.log(finalData);\n      return finalData;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\nfunction LineChart() {\n  const [labels, setLabels] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { year, month } = useFilter();\n  const chartRef = useRef(null);\n  // const [pieData, setPieData] = useState({ labels: [] });\n  // const resetZoom = () => {\n  //   chartRef.current.resetZoom();\n  // };\n\n  useEffect(() => {\n    fetchLabels(year, month).then((label2) => {\n      setLabels(label2);\n      setLoading(true);\n    });\n  }, [year, month]);\n\n  return (\n    <div className=\"flex w-11/12 my-3 mx-16\">\n      {loading && (\n        <Card className=\"flex-1\">\n          {/* <Button onClick={resetZoom}>Zoom Out</Button> */}\n          <Line ref={chartRef} options={options} data={labels} />\n        </Card>\n      )}\n      <BarChart />\n    </div>\n  );\n}\n\nexport { options, optionsPie };\nexport default LineChart;\n","import {\n  Box,\n  Button,\n  Checkbox,\n  Chip,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { columns } from \"../constants\";\n\nconst Selection = ({\n  offset,\n  topic,\n  setOffset,\n  setTopic,\n  toggleReload,\n  endUser = false,\n}) => {\n  const [offsetTemp, setOffsetTemp] = useState(offset);\n  return (\n    <div className=\"w-5/12 flex justify-between items-end mb-3\">\n      <div className=\"w-1/2\">\n        <InputLabel id=\"minority\">Topic</InputLabel>\n        <Select\n          labelId=\"minority\"\n          id=\"minority-select\"\n          value={topic}\n          multiple\n          renderValue={(selected) => (\n            <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          label=\"Topic\"\n          onChange={(event) => {\n            const {\n              target: { value },\n            } = event;\n            setTopic(typeof value === \"string\" ? value.split(\",\") : value);\n          }}\n        >\n          <MenuItem value=\"none\">All</MenuItem>\n          {columns\n            .filter(\n              (column) => column.field !== \"verify\" && column.field !== \"text\"\n            )\n            .map((column) => (\n              <MenuItem key={column.field} value={column.field}>\n                <Checkbox checked={topic.indexOf(column.field) > -1} />\n                <ListItemText primary={column.label} />\n              </MenuItem>\n            ))}\n        </Select>\n      </div>\n      {!endUser && (\n        <>\n          <TextField\n            label={\"Offset\"}\n            value={offsetTemp}\n            type={\"number\"}\n            onChange={(event) => {\n              setOffsetTemp(event.target.value);\n            }}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                setOffset(offsetTemp);\n              }\n            }}\n          />\n          <Button\n            onClick={() => {\n              toggleReload();\n            }}\n          >\n            Refuel\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Selection;\n","import {\n  Alert,\n  Button,\n  Card,\n  Checkbox,\n  Chip,\n  FormControlLabel,\n  Snackbar,\n} from \"@mui/material\";\nimport FormGroup from \"@mui/material/FormGroup\";\n\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport { columns, months } from \"../constants\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst Tweet = ({ tweet }) => {\n  const [changedColumn, setChangedColumn] = useState({ ...tweet });\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [snackOpen, setSnackOpen] = useState({\n    display: false,\n    message: \"\",\n    intent: \"success\",\n  });\n  useEffect(() => {\n    setChangedColumn({ ...tweet });\n  }, [tweet]);\n\n  const editSubmit = () => {\n    axios\n      .post(`/tweets/edit_request/${tweet.id}`, changedColumn)\n      .then(() => {\n        setIsEditOpen(false);\n        setSnackOpen({\n          display: true,\n          message: \"Successfully Modified\",\n          intent: \"success\",\n        });\n      })\n      .catch(() => {\n        setSnackOpen({\n          display: false,\n          message: \"Modification Failed\",\n          intent: \"error\",\n        });\n      });\n  };\n  const handleClose = () => {\n    console.log(\"Closed\");\n    setSnackOpen({ ...snackOpen, display: false });\n  };\n  const handleChange = (event, column) => {\n    let changeTemp = JSON.parse(JSON.stringify(changedColumn));\n    changeTemp[column] = event.target.checked;\n    console.log(changeTemp);\n    setChangedColumn(changeTemp);\n  };\n  const created_date = new Date(tweet.created_at);\n  return (\n    <Card className=\"p-5 mb-2\" variant=\"outlined\">\n      <div>\n        <PersonIcon />\n        <span className=\"text-primary\"> {tweet.username}</span> on{\" \"}\n        <span className=\"text-primary\">\n          {months[created_date.getMonth()]} {created_date.getDate()},{\" \"}\n          {created_date.getFullYear()}\n        </span>\n      </div>\n      {tweet.text}\n      <div className=\"mt-1 flex\">\n        {tweet &&\n          Object.keys(tweet)\n            .filter(\n              (col) =>\n                col !== \"id\" &&\n                col !== \"created_at\" &&\n                col !== \"text\" &&\n                col !== \"username\"\n            )\n            .map((rowElement) => {\n              if (tweet[rowElement]) {\n                return (\n                  <Chip className=\"mr-1\" label={rowElement} color=\"success\" />\n                );\n              } else {\n                return <></>;\n              }\n            })}\n        <Button\n          sx={{ marginLeft: \"auto\" }}\n          onClick={() => {\n            setIsEditOpen(true);\n          }}\n        >\n          {\"Edit\"}\n        </Button>\n      </div>\n      {isEditOpen && (\n        <>\n          <FormGroup sx={{ fontSize: \"0.5em\" }}>\n            {columns\n              .map((column) => column.field)\n              .filter(\n                (datum) =>\n                  datum !== \"verify\" && datum !== \"others\" && datum !== \"text\"\n              )\n              .map((datum) => (\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={changedColumn[datum]}\n                      onChange={(event) => {\n                        handleChange(event, datum);\n                      }}\n                    />\n                  }\n                  label={datum}\n                />\n              ))}\n          </FormGroup>\n          <>\n            <Snackbar\n              open={snackOpen.display}\n              autoHideDuration={3000}\n              onClose={handleClose}\n            >\n              <Alert\n                onClose={handleClose}\n                severity={snackOpen.intent}\n                sx={{ width: \"100%\" }}\n              >\n                {snackOpen.message}\n              </Alert>\n            </Snackbar>\n            <Button variant=\"contained\" onClick={editSubmit}>\n              Request\n            </Button>\n          </>\n        </>\n      )}\n    </Card>\n  );\n};\n\nexport default Tweet;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nconst optionsBar = {\n  responsive: true,\n  // indexAxis: \"y\",\n  maintainAspectRatio: false,\n\n  // barThickness: 6,\n  plugins: {\n    legend: {\n      // position: 'top',\n      // display: true,\n    },\n    title: {\n      display: true,\n      text: \"Trending Words\",\n    },\n  },\n};\n\nconst WordCloud = () => {\n  const [words, setWords] = useState([]);\n  const [counts, setCounts] = useState([]);\n\n  useEffect(() => {\n    let params = new URLSearchParams();\n    params.append(\"month\", \"2021-09\");\n    // if (year !== \"none\" && month !== \"none\") {\n    //   params.append(\"month\", `${year}-${month}`);\n    // }\n    axios\n      .get(\"/tweets_commons/\", { params })\n      .then((data) => data.data)\n      .then((data) => {\n        data.sort((a, b) => b[1] - a[1]);\n        let wordsTemp = data.map((datum) => datum[0]);\n        let countTemp = data.map((datum) => datum[1]);\n        console.log(countTemp);\n        setWords(wordsTemp.slice(0, 10));\n        setCounts(countTemp.slice(0, 10));\n      });\n  }, []);\n  return (\n    <div>\n      <Bar\n        options={optionsBar}\n        data={{\n          labels: words,\n          datasets: [\n            {\n              label: \"Total Word Count\",\n              data: counts,\n              backgroundColor: \"#247881\",\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n};\n\nexport default WordCloud;\n","import { Card } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useFilter } from \"./FilterProvider\";\nimport Selection from \"./Selection\";\nimport Tweet from \"./Tweet\";\nimport WordCloud from \"./WordCloud\";\nconst Tweets = () => {\n  const [dataList, setDataList] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [topics, setTopics] = useState([]);\n  const [reload, setReload] = useState(true);\n  let { year, month } = useFilter();\n\n  // const [description, setDescription] = useState(\"All tweets.\");\n\n  useEffect(() => {\n    setDataList([]);\n  }, [year, month, topics.length]);\n\n  useEffect(() => {\n    // let params = { offset: offset, limit: 10 };\n    let params = new URLSearchParams([\n      [\"offset\", offset],\n      [\"limit\", 10],\n    ]);\n    if (year !== \"none\" && month !== \"none\") {\n      params.append(\"month\", `${year}-${month}`);\n    }\n    if (topics.length !== 0) {\n      topics.forEach((topic) => {\n        params.append(\"topics\", topic);\n      });\n    }\n    axios\n      .get(`/tweets/`, {\n        params,\n      })\n      .then((data) => data.data)\n      .then((data) => {\n        console.log(data);\n        setDataList((dl) => [...dl, ...data]);\n      });\n  }, [offset, topics, topics.length, year, month]);\n  // useEffect(() => {\n  //   let params = new URLSearchParams([\n  //     [\"offset\", 0],\n  //     [\"limit\", 10],\n  //   ]);\n  //   if (year !== \"none\" && month !== \"none\") {\n  //     params.append(\"month\", `${year}-${month}`);\n  //   }\n  //   if (topics.length !== 0) {\n  //     topics.forEach((topic) => {\n  //       params.append(\"topics\", topic);\n  //     });\n  //   }\n  //   axios\n  //     .get(`/tweets/`, {\n  //       params,\n  //     })\n  //     .then((data) => data.data)\n  //     .then((data) => {\n  //       console.log(data);\n  //       setDataList(data);\n  //     });\n  // }, [reload, topics.length, year, month]);\n\n  // useEffect(() => {\n  //   const current_descrip =\n  //     topics !== \"none\"\n  //       ? columns.filter((column) => column.field === topics)[0].description\n  //       : \"All tweets.\";\n  //   setDescription(current_descrip);\n  // }, [reload, topics]);\n\n  const fetchData = () => {\n    setOffset(offset + 10);\n  };\n  const toggleReload = () => {\n    setReload(!reload);\n  };\n\n  return (\n    <div className=\"w-11/12 items-stretch flex justify-between mx-auto \">\n      <Card className=\"w-3/12 mr-3 p-3 h-96\">\n        <div className=\"font-bold text-center text-2xl text-primary\">\n          Filter\n        </div>\n        <Selection\n          offset={offset}\n          setOffset={setOffset}\n          topic={topics}\n          toggleReload={toggleReload}\n          endUser={true}\n          setTopic={setTopics}\n        />\n        <WordCloud />\n        {/* <div className=\"text-base\">{description}</div> */}\n      </Card>\n      <div className=\"w-3/4 overflow-y-auto\">\n        <InfiniteScroll\n          dataLength={dataList.length} //This is important field to render the next data\n          next={fetchData}\n          height={384}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          {dataList.map((datum) => (\n            <Tweet tweet={datum} key={datum.id} />\n          ))}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n};\n\nexport default Tweets;\n","import { Button, MenuItem, Select } from \"@mui/material\";\nimport { useFilter } from \"./FilterProvider\";\nimport LineChart from \"./LineChart\";\nimport Tweets from \"./Tweets\";\nimport { months } from \"../constants\";\nimport { useState } from \"react\";\nconst FilteredContainer = () => {\n  const { year, setYear, month, setMonth } = useFilter();\n  const [yearTemp, setYearTemp] = useState(year);\n  const [monthTemp, setMonthTemp] = useState(month);\n  const submitFilter = () => {\n    setYear(yearTemp);\n    setMonth(monthTemp);\n  };\n  return (\n    <div>\n      <div className=\"flex mt-2 items-center ml-16 pl-2 w-11/12 py-1 bg-primary\">\n        <div className=\"text-white w-2/12 text-lg font-bold\">View Data Of</div>\n        <div className=\"mx-2 w-2/12 flex items-center \">\n          <div className=\"text-white text-base font-semibold\">Year: </div>\n          <Select\n            sx={{ backgroundColor: \"white\", minWidth: \"5em\", marginLeft: \"1%\" }}\n            labelId=\"minority\"\n            id=\"minority-select\"\n            value={yearTemp}\n            label=\"Year\"\n            onChange={(event) => {\n              setYearTemp(`${event.target.value}`);\n            }}\n          >\n            <MenuItem value=\"none\">All</MenuItem>\n            <MenuItem value={2021}>{2021}</MenuItem>\n            <MenuItem value={2022}>{2022}</MenuItem>\n          </Select>\n        </div>\n        <div className=\"mx-2 flex items-center w-2/12\">\n          <div className=\"text-white text-base font-semibold\">Month: </div>\n\n          <Select\n            labelId=\"minority\"\n            id=\"minority-select\"\n            sx={{\n              backgroundColor: \"white\",\n              marginLeft: \"1%\",\n              minWidth: \"5em\",\n            }}\n            value={monthTemp}\n            label=\"Month\"\n            onChange={(event) => {\n              setMonthTemp(`${event.target.value}`);\n            }}\n          >\n            <MenuItem value=\"none\">All</MenuItem>\n            {months.map((mon, idx) => (\n              <MenuItem value={idx + 1}>{mon}</MenuItem>\n            ))}\n          </Select>\n        </div>\n        <Button\n          variant=\"contained\"\n          //   color=\"success\"\n          size=\"large\"\n          sx={{ backgroundColor: \"#247890\" }}\n          onClick={submitFilter}\n        >\n          Filter\n        </Button>\n      </div>\n      <LineChart />\n      <Tweets />\n    </div>\n  );\n};\n\nexport default FilteredContainer;\n","const Title = ({ text }: { text: string }) => (\n  <div className=\"text-2xl font-bold  text-primary\">{text}</div>\n);\n\nexport default Title;\n","import CampaignIcon from \"@mui/icons-material/Campaign\";\nimport { Paper } from \"@mui/material\";\nimport Title from \"./Title\";\nimport CategoryIcon from \"@mui/icons-material/Category\";\nconst DataSection = () => {\n  return (\n    <Paper className=\"w-3/12 mt-2 p-2 \">\n      <Title text={\"Data\"}></Title>\n      <div className=\"flex justify-between pr-2\">\n        <div className=\" text-primary\">\n          <CampaignIcon color=\"#247881\" fontSize=\"large\" /> <b>50000+</b>\n          <div className=\"text-black\">Tweets analysed</div>\n        </div>\n        <div className=\" text-primary\">\n          <CategoryIcon color=\"#247881\" fontSize=\"large\" /> <b>9</b>\n          <div className=\"text-black\">Topics</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nexport default DataSection;\n","import { Paper } from \"@mui/material\";\nimport Title from \"./Title\";\nimport DataSection from \"./DataSection\";\nconst Purpose = () => (\n  <div className=\"ml-16 w-11/12 flex justify-between\">\n  <Paper className=\"w-3/12 mt-2 p-2\">\n    <Title text={\"An Idea Behind\"}></Title>\n    Listening to people's questions and concerns is an important way for health\n    authorities to learn about what matters to communities in response to\n    COVID-19.\n  </Paper>\n  <DataSection/>\n  </div>\n);\n\nexport default Purpose;\n","import FilteredContainer from \"./FilteredContainer\";\nimport Nav from \"./Nav\";\nimport Purpose from \"./Purpose\";\n// import Team from \"./Team\";\n\nconst EndUser = () => {\n  return (\n    <div>\n      <Nav />\n      <div className=\" bg-blue-50\">\n        <Purpose />\n        {/* <Worker /> */}\n        <FilteredContainer />\n        {/* <Team /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default EndUser;\n","import DialogTitle from \"@mui/material/DialogTitle\";\nimport { Button, Card, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAuth } from \"./AuthProvider\";\nimport { useLocation, useNavigate } from \"react-router\";\n\nexport default function Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const auth = useAuth();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    auth.signin(username, password, () => {\n      // Send them back to the page they tried to visit when they were\n      // redirected to the login page. Use { replace: true } so we don't create\n      // another entry in the history stack for the login page.  This means that\n      // when they get to the protected page and click the back button, they\n      // won't end up back on the login page, which is also really nice for the\n      // user experience.\n      const from = location.state?.from?.pathname || \"/\";\n\n      navigate(from, { replace: true });\n    });\n  }\n\n  return (\n    <Card className=\"w-1/3 mx-auto mt-10 p-4\">\n      <DialogTitle className=\"text-center\">EpiSuS Login</DialogTitle>\n      <form className=\" flex flex-col items-center\" onSubmit={handleSubmit}>\n        <div className=\"my-2\">\n          <TextField\n            id=\"outlined-username\"\n            label=\"Username\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <TextField\n            id=\"outlined-password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </div>\n        <Button type=\"submit\" variant=\"contained\">\n          Login\n        </Button>\n      </form>\n    </Card>\n  );\n}\n","import { Navigate, useLocation } from \"react-router\";\nimport { useAuth } from \"./AuthProvider\";\n\nexport default function RequireAuth({ children }) {\n  let auth = useAuth();\n  let location = useLocation();\n\n  if (!auth.user) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\n","import { Route, Routes } from 'react-router';\nimport Admin from './components/Admin';\nimport TweetCollectionAdminPanel from './components/Admin/TweetCollectionAdminPanel';\nimport AuthProvider from './components/AuthProvider';\nimport EndUser from './components/EndUser';\nimport FilterProvider from './components/FilterProvider';\nimport Login from './components/Login';\nimport RequireAuth from './components/RequireAuth';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <FilterProvider>\n   <Routes>\n     <Route path=\"/\" element={<EndUser />} />\n     <Route path=\"/login\" element={<Login />} />\n      <Route\n            path=\"/ap\"\n            element={\n              <RequireAuth>\n                <Admin />\n              </RequireAuth>\n            }\n          >\n            <Route\n          path=\"modify\"\n          element={<TweetCollectionAdminPanel action=\"modify\" />}\n        />\n        <Route\n          index\n          element={<TweetCollectionAdminPanel action=\"verify\" />}\n        />\n            </Route>\n   </Routes>\n   </FilterProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n// import './styles/tailwind.css';\nimport \"./index.css\";\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\n\nroot.render(\n  <StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}