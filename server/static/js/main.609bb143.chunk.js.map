{"version":3,"sources":["components/Name.tsx","components/Nav.tsx","components/Admin/index.jsx","constants.js","components/Selection.jsx","components/Admin/Tweet.jsx","components/Admin/TweetCollectionAdminPanel.jsx","components/utility.js","components/AuthProvider.jsx","components/LineChart.jsx","components/Title.tsx","components/Purpose.tsx","components/Tweet.jsx","components/Tweets.jsx","components/EndUser.jsx","components/Login.jsx","components/RequireAuth.jsx","App.tsx","index.tsx"],"names":["Name","className","Nav","Admin","months","columns","field","label","headerName","borderColor","areaColor","backgroundColor","description","Selection","offset","topic","setOffset","setTopic","toggleReload","endUser","useState","offsetTemp","setOffsetTemp","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","filter","column","map","TextField","type","onKeyDown","key","Button","onClick","Tweet","row","verified","action","changedColumn","setChangedColumn","isVerified","setIsVerified","display","message","intent","snackOpen","setSnackOpen","useEffect","verifySubmit","toSubmit","prop","accessToken","sessionStorage","getItem","axios","patch","headers","Authorization","then","handleClose","console","log","TableRow","sx","border","datum","index","TableCell","fontSize","align","Checkbox","checked","changeTemp","JSON","parse","stringify","handleChange","Snackbar","open","autoHideDuration","onClose","Alert","severity","width","variant","catch","color","disabled","TweetCollectionAdminPanel","dataList","setDataList","reload","setReload","get","data","TableContainer","component","Paper","height","Table","stickyHeader","minWidth","borderSpacing","TableHead","fontWeight","TableBody","loggedInOrNot","parsedJwt","token","baseSplit","split","length","Error","base64","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","Date","now","exp","invalid","parseJwt","removeItem","sub","AuthContext","createContext","AuthProvider","children","user","setUser","signin","username","password","callback","a","config","params","URLSearchParams","append","post","setItem","access_token","signout","Provider","useAuth","useContext","ChartJS","register","ArcElement","CategoryScale","LinearScale","PointElement","LineElement","Title","BarElement","zoomPlugin","Tooltip","Legend","Filler","options","responsive","cubicInterpolationMode","plugins","legend","position","tooltip","cornerRadius","title","text","zoom","wheel","enabled","drag","mode","scales","x","y","stacked","optionsPie","indexAxis","maintainAspectRatio","fetchLabels","finalData","covid_stats","vaccination","covid_politics","humour","lockdown","civic_views","others","dataArrays","life_during_pandemic","covid_waves_and_variants","created_date","fill","error","LineChart","labels","setLabels","loading","setLoading","pieData","setPieData","label2","dataTemp","datasets","count","reduce","prev","curr","sort","b","Card","Purpose","tweet","created_at","getMonth","getDate","getFullYear","Object","keys","col","rowElement","Chip","Tweets","setDescription","dl","current_descrip","dataLength","next","hasMore","loader","endMessage","style","textAlign","EndUser","Login","setUsername","setPassword","navigate","useNavigate","location","useLocation","auth","DialogTitle","onSubmit","e","preventDefault","from","state","pathname","InputLabelProps","shrink","RequireAuth","to","App","path","element","render","document","getElementById"],"mappings":"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","file":"static/js/main.609bb143.chunk.js","sourcesContent":["const Name = () => (\n  <div className=\"font-bold text-primary ml-3 text-2xl\">\n    {/* EpiSus */}\n    Epidemiological Surveillance System\n    {/* <KeyboardArrowDownIcon /> */}\n  </div>\n);\n\nexport default Name;\n","import Name from \"./Name\";\n   \nconst Nav = () => {\n    return (\n        <div className='border-2 bg-white px-16 py-2 flex items-center justify-center'>\n            <div className='font-bold w-10'>\n            {/* <Corona /> */}\n            </div>\n            <Name />\n           \n        </div>\n    )\n}\n\nexport default Nav\n","import { Outlet } from \"react-router\";\nimport Nav from \"../Nav\";\n\nconst Admin = () => {\n  return (\n    <div>\n      <Nav />\n      {/* <TweetCollectionAdminPanel action=\"verify\" /> */}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Admin;\n","const baseAddress = \"http://localhost:8000\";\nconst months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\nconst columns = [\n    {\n        field: \"text\",\n        label: \"Text\",\n        headerName: \"text\",\n    },\n    {\n        field: \"covid_stats\",\n        label: \"Covid Stats\",\n        borderColor: \"#390ba4\",\n        areaColor:\"#00429d\",\n        backgroundColor: \"#f77189\",\n        headerName: \"covid \\n stats\",\n        description:\n            \" Statistics about new cases, deaths, total cases, tests, casualties, etc.\",\n    },\n    {\n        field: \"vaccination\",\n        label: \"Vaccination\",\n        borderColor: \"#8c0096\",\n        areaColor:\"#3f69af\",\n        backgroundColor: \"#d58c32\",\n        headerName: \"vaccination\",\n        description: \"Serious information regarding vaccination.\",\n    },\n    {\n        field: \"covid_politics\",\n        label: \"Covid Politics\",\n        areaColor:\"#6592bf\",\n        borderColor: \"#bf0082\",\n        backgroundColor: \"#a4a031\",\n        headerName: \"covid \\n politics\",\n        description:\n            \"National and International politics closely concerned with Covid.\",\n    },\n    {\n        field: \"humour\",\n        label: \"Humour\",\n        borderColor: \"#e2006a\",\n        areaColor:\"#8bbdcc\",\n        backgroundColor: \"#50b131\",\n        headerName: \"humour\",\n        description: \"Satire, humour related to Covid.\",\n    },\n    {\n        field: \"lockdown\",\n        label: \"Lockdown\",\n        borderColor: \"#f90151\",\n        backgroundColor: \"#34ae91\",\n        areaColor:\"#dfdfc1\",\n        headerName: \"lockdown\",\n        description:\n            \"Information regarding lockdown, nisedhagyas, exams during lockdown.\",\n    },\n    {\n        field: \"civic_views\",\n        label: \"Civic Views\",\n        borderColor: \"#ff5039\",\n        backgroundColor: \"#37abb5\",\n        areaColor:\"#007ead\",\n        headerName: \"civic \\n views\",\n        description: \"General views, suggestions, rants from the public.\",\n    },\n    {\n        field: \"life_during_pandemic\",\n        label: \"Life During Pandemic\",\n        borderColor: \"#ff7e1f\",\n        areaColor:\"#c7a861\",\n        backgroundColor: \"#3ba3ec\",\n        headerName: \"Life During \\nPandemic\",\n        description: \"Effect of covid on day-to-day activities of the public.\",\n    },\n    {\n        field: \"covid_waves_and_variants\",\n        borderColor: \"#ffa600\",\n        backgroundColor: \"#bb83f4\",\n        areaColor:\"#d08769\",\n        label: \"Covid Waves and Variants\",\n        headerName: \"Covid Waves \\n and \\n Variants\",\n        description: \"Different waves and variants of the virus.\",\n    },\n    {\n        field: \"others\",\n        borderColor: \"#ffa600\",\n        backgroundColor: \"#f564d4\",\n        label: \"Others\",\n        areaColor:\"#bd717a\",\n        headerName: \"Others\",\n        description: \"Not related to any Covid Categories,\",\n    },\n    {field: \"verify\", label: \"Verify\", headerName: \"Verify\"},\n];\nexport {baseAddress, columns, months};\n","import {Button, InputLabel, MenuItem, Select, TextField} from \"@mui/material\";\nimport React, {useState} from \"react\";\nimport {columns} from \"../constants\";\n\nconst Selection = ({\n    offset,\n    topic,\n    setOffset,\n    setTopic,\n    toggleReload,\n    endUser = false,\n}) => {\n    const [offsetTemp, setOffsetTemp] = useState(offset);\n    return (\n        <div className=\"w-5/12 flex justify-between items-end mb-3\">\n            <div className=\"w-1/2\">\n                <InputLabel id=\"minority\">Topic</InputLabel>\n                <Select\n                    labelId=\"minority\"\n                    id=\"minority-select\"\n                    value={topic}\n                    label=\"Topic\"\n                    onChange={(event) => {\n                        setTopic(event.target.value);\n                    }}\n                >\n                    <MenuItem value=\"none\">All</MenuItem>\n                    {columns\n                        .filter(\n                            (column) =>\n                                column.field !== \"verify\" &&\n                                column.field !== \"text\",\n                        )\n                        .map((column) => (\n                            <MenuItem value={column.field}>\n                                {column.label}\n                            </MenuItem>\n                        ))}\n                </Select>\n            </div>\n            {!endUser && (\n                <>\n                    <TextField\n                        label={\"Offset\"}\n                        value={offsetTemp}\n                        type={\"number\"}\n                        onChange={(event) => {\n                            setOffsetTemp(event.target.value);\n                        }}\n                        onKeyDown={(event) => {\n                            if (event.key === \"Enter\") {\n                                setOffset(offsetTemp);\n                            }\n                        }}\n                    />\n                    <Button\n                        onClick={() => {\n                            toggleReload();\n                        }}\n                    >\n                        Refuel\n                    </Button>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Selection;\n","import {\n  Alert,\n  Button,\n  Checkbox,\n  Snackbar,\n  TableCell,\n  TableRow,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { columns } from \"../../constants\";\n\nconst Tweet = ({ row, verified, action }) => {\n  const [changedColumn, setChangedColumn] = useState({ ...row });\n  const [isVerified, setIsVerified] = useState(verified);\n  const [snackOpen, setSnackOpen] = useState({\n    display: false,\n    message: \"\",\n    intent: \"success\",\n  });\n  useEffect(() => {\n    setChangedColumn({ ...row });\n    setIsVerified(verified);\n  }, [row, verified]);\n  const modifySubmit = () => {\n    let toSubmit = {};\n    for (const prop in row) {\n      toSubmit[prop] = changedColumn[prop];\n    }\n    let accessToken = sessionStorage.getItem(\"accessToken\");\n    axios\n      .patch(`/tweets/${row.id}`, toSubmit, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n      .then(() => {\n        setSnackOpen({\n          display: true,\n          message: \"Successfully Modified\",\n          intent: \"success\",\n        });\n      })\n      .catch(() => {\n        setSnackOpen({\n          display: false,\n          message: \"Modification Failed\",\n          intent: \"error\",\n        });\n      });\n  };\n  const verifySubmit = () => {\n    let toSubmit = {};\n    for (const prop in row) {\n      if (row[prop] !== changedColumn[prop]) {\n        toSubmit[prop] = changedColumn[prop];\n      }\n    }\n    let accessToken = sessionStorage.getItem(\"accessToken\");\n    axios\n      .patch(`/pseudo_tweets/${row.id}`, toSubmit, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      })\n      .then(() => {\n        setIsVerified(true);\n      });\n  };\n  const handleClose = () => {\n    console.log(\"Closed\");\n    setSnackOpen({ ...snackOpen, display: false });\n  };\n  const handleChange = (event, column) => {\n    let changeTemp = JSON.parse(JSON.stringify(changedColumn));\n    changeTemp[column] = event.target.checked;\n    console.log(changeTemp);\n    setChangedColumn(changeTemp);\n  };\n  return (\n    <TableRow\n      key={row.id}\n      sx={{\n        \"&:last-child td, &:last-child th\": { border: 0 },\n      }}\n    >\n      {columns\n        .map((column) => column.field)\n        .filter((datum) => datum !== \"verify\" && datum !== \"others\")\n        .map((datum, index) => {\n          if (datum === \"text\")\n            return (\n              <TableCell key={index} sx={{ fontSize: \"1rem\" }} align=\"left\">\n                {row[datum]}\n              </TableCell>\n            );\n          else\n            return (\n              <TableCell key={index} align=\"right\">\n                <Checkbox\n                  checked={changedColumn[datum]}\n                  onChange={(event) => {\n                    handleChange(event, datum);\n                  }}\n                />\n              </TableCell>\n            );\n        })}\n      <TableCell align=\"right\">\n        {action === \"modify\" ? (\n          <>\n            <Snackbar\n              open={snackOpen.display}\n              autoHideDuration={3000}\n              onClose={handleClose}\n            >\n              <Alert\n                onClose={handleClose}\n                severity={snackOpen.intent}\n                sx={{ width: \"100%\" }}\n              >\n                {snackOpen.message}\n              </Alert>\n            </Snackbar>\n            <Button variant=\"contained\" onClick={modifySubmit}>\n              Modify\n            </Button>\n          </>\n        ) : (\n          <>\n            {isVerified ? (\n              <Button\n                color=\"success\"\n                disabled={action === \"verify\" && isVerified}\n                // variant=\"contained\"\n                onClick={verifySubmit}\n              >\n                Verified\n              </Button>\n            ) : (\n              <Button variant=\"contained\" onClick={verifySubmit}>\n                Verify\n              </Button>\n            )}\n          </>\n        )}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default Tweet;\n","import {\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nimport {columns} from \"../../constants\";\nimport Selection from \"../Selection\";\nimport Tweet from \"./Tweet\";\n// const buttonRef = React.createRef();\n\nconst TweetCollectionAdminPanel = ({action}) => {\n    const [dataList, setDataList] = useState([]);\n    const [offset, setOffset] = useState(0);\n    const [topic, setTopic] = useState(\"none\");\n    const [reload, setReload] = useState(true);\n\n    useEffect(() => {\n        axios\n            .get(\n                `/${\n                    action === \"verify\" ? \"pseudo_tweets\" : \"tweets\"\n                }/?offset=${offset}&limit=10${\n                    topic !== `none` ? `&filter_topic=${topic}` : \"\"\n                }&maximize_labels=true`,\n            )\n            .then((data) => data.data)\n            .then((data) => {\n                console.log(data);\n                setDataList(data);\n            });\n    }, [offset, topic, reload, action]);\n    const toggleReload = () => {\n        setReload(!reload);\n    };\n    return (\n        <div className=\" mt-10 w-11/12 mx-auto \">\n            <Selection\n                offset={offset}\n                setOffset={setOffset}\n                topic={topic}\n                toggleReload={toggleReload}\n                setTopic={setTopic}\n            />\n            <TableContainer component={Paper} sx={{height: 500}}>\n                <Table\n                    stickyHeader\n                    sx={{minWidth: 650, borderSpacing: \"0 20px\"}}\n                    aria-label=\"simple table\"\n                >\n                    <colgroup>\n                        <col width=\"80%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"2%\" />\n                        <col width=\"6%\" />\n                    </colgroup>\n                    <TableHead>\n                        <TableRow>\n                            {columns\n                                .filter((column) => column.field !== \"others\")\n                                .map((column, index) => {\n                                    return (\n                                        <TableCell\n                                            key={index}\n                                            sx={{\n                                                width: 50,\n                                                fontWeight: \"bold\",\n                                            }}\n                                        >\n                                            {column.headerName}\n                                        </TableCell>\n                                    );\n                                })}\n                        </TableRow>\n                    </TableHead>\n\n                    <TableBody>\n                        {dataList.map((row, index) => (\n                            <Tweet\n                                key={index}\n                                row={{...row}}\n                                action={action}\n                                verified={!!row[\"verified_at\"]}\n                            />\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n};\n\nexport default TweetCollectionAdminPanel;\n","function loggedInOrNot() {\n\n  // NOTE: This means The refresh token has not expired yet\n  const accessToken = sessionStorage.getItem(\"accessToken\");\n  console.log(\"AccessToken\", accessToken)\n  if (accessToken) {\n    const parsedJwt = parseJwt(accessToken);\n    if (parsedJwt.invalid) {\n    console.log(\"AccessToken\", parsedJwt.invalid)\n      console.log(\"Invalid access token.\");\n      sessionStorage.removeItem(\"accessToken\");\n      return false\n    } else if (\"sub\" in parsedJwt) {\n  console.log(\"AccessToken Check\", parsedJwt)\n\n      return parsedJwt.sub;\n    }\n  }\n  \n}\n\n/**\n *\n * Parses Jwt. **Doesn't throw any exception**\n * @param {string} token\n * @returns {object}\n */\nfunction parseJwt(token) {\n  try {\n    const baseSplit = token.split(\".\");\n    if (baseSplit.length !== 3) throw new Error(\"Token has been tampered\");\n    const base64 = baseSplit[1].replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const jsonPayload = decodeURIComponent(\n      atob(base64)\n        .split(\"\")\n        .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\n        .join(\"\")\n    );\n    let parsedJwt = JSON.parse(jsonPayload);\n    if (Date.now() > parsedJwt.exp * 1000) {\n      throw new Error(\"Token expired\");\n    }\n\n    return { ...parsedJwt, invalid: false };\n  } catch {\n    return { invalid: true };\n  }\n}\n\nexport { loggedInOrNot, parseJwt };\n","import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { createContext } from \"react\";\nimport { loggedInOrNot } from \"./utility\";\n\nlet AuthContext = createContext(null);\n\nexport default function AuthProvider({ children }) {\n  let [user, setUser] = useState(loggedInOrNot());\n  let signin = async (username, password, callback) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    };\n    const params = new URLSearchParams();\n    params.append(\"username\", username);\n    params.append(\"password\", password);\n\n    return axios\n      .post(\"/auth/login\", params, config)\n      .then((data) => data.data)\n      .then((data) => {\n        sessionStorage.setItem(\"accessToken\", data.access_token);\n        setUser(loggedInOrNot());\n        callback();\n      });\n  };\n\n  let signout = (callback) => {\n    return \"Signed Out\";\n  };\n\n  let value = { user, signin, signout };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  ArcElement,\n  Tooltip,\n  Legend,\n  Filler,\n  BarElement,\n} from \"chart.js\";\nimport { Bar, Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Card } from \"@mui/material\";\nimport { columns } from \"../constants\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\n\n// import faker from 'faker';\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  BarElement,\n  zoomPlugin,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst options = {\n  responsive: true,\n  cubicInterpolationMode: \"monotone\",\n  plugins: {\n    legend: {\n      position: \"top\",\n    },\n    tooltip: { cornerRadius: 0 },\n    title: {\n      display: true,\n      text: \"Line Chart\",\n    },\n\n    zoom: {\n      zoom: {\n        wheel: {\n          enabled: false,\n        },\n        drag: {\n          enabled: true,\n        },\n        mode: \"x\",\n      },\n    },\n  },\n  scales: {\n    x: {\n      title: {\n        display: true,\n        text: \"Day\",\n      },\n    },\n    y: {\n      stacked: true,\n      title: {\n        display: true,\n        text: \"Tweet Count\",\n      },\n    },\n  },\n};\n\nconst optionsPie = {\n  responsive: true,\n  indexAxis: \"y\",\n  maintainAspectRatio: false,\n\n  // barThickness: 6,\n  plugins: {\n    legend: {\n      // position: 'top',\n      display: true,\n    },\n    title: {\n      display: true,\n      text: \"Bar Graph\",\n    },\n  },\n};\n\nconst fetchLabels = async () =>\n  axios\n    .get(`/pseudo_tweets/overview?all=true`)\n    .then((data) => data.data)\n    .then((data) => {\n      const finalData = {};\n      const covid_stats = data.map((datum) => datum.covid_stats);\n      const vaccination = data.map((datum) => datum.vaccination);\n      const covid_politics = data.map((datum) => datum.covid_politics);\n      const humour = data.map((datum) => datum.humour);\n      const lockdown = data.map((datum) => datum.lockdown);\n      const civic_views = data.map((datum) => datum.civic_views);\n      const others = data.map((datum) => datum.others);\n      const life_during_pandemic = data.map(\n        (datum) => datum.life_during_pandemic\n      );\n      const covid_waves_and_variants = data.map(\n        (datum) => datum.covid_waves_and_variants\n      );\n      const dataArrays = {\n        covid_stats: covid_stats,\n        vaccination: vaccination,\n        covid_politics: covid_politics,\n        humour: humour,\n        lockdown: lockdown,\n        civic_views: civic_views,\n        life_during_pandemic: life_during_pandemic,\n        covid_waves_and_variants: covid_waves_and_variants,\n        others: others,\n      };\n      finalData[\"labels\"] = data.map((datum) => datum.created_date);\n      finalData[\"datasets\"] = columns\n        .filter(\n          (column) => column.field !== \"text\" && column.field !== \"verify\"\n        )\n        .map((column) => {\n          return {\n            data: dataArrays[column.field],\n            label: column.label,\n            fill: true,\n            borderColor: column.areaColor,\n            backgroundColor: column.areaColor,\n          };\n        });\n\n      console.log(finalData);\n      return finalData;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\nfunction LineChart() {\n  const [labels, setLabels] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const [pieData, setPieData] = useState({ labels: [] });\n  useEffect(() => {\n    // const pieLabels = [\n    //   \"Covid Stats\",\n    //   \"Vaccination\",\n    //   \"Covid Politics\",\n    //   \"Humour\",\n    //   \"Lockdown\",\n    //   \"Civic Views\",\n    //   \"Life During Pandemic\",\n    //   \"Covid Waves and Variants\",\n    //   \"Others\",\n    // ];\n    fetchLabels().then((label2) => {\n      if (label2.labels) {\n        const dataTemp = label2.datasets.map((datum) => {\n          return {\n            count: datum.data.reduce((prev, curr) => prev + curr, 0),\n            label: datum.label,\n          };\n        });\n        dataTemp.sort((a, b) => b.count - a.count);\n        console.log(\"Data Temp\", dataTemp);\n        setPieData({\n          labels: dataTemp.map((datum) => datum.label),\n          datasets: [\n            {\n              label: \"Total Tweets Count\",\n              data: dataTemp.map((datum) => datum.count),\n              backgroundColor: \"#247881\",\n            },\n          ],\n        });\n      }\n      setLabels(label2);\n      setLoading(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"flex w-11/12 my-3 mx-16\">\n      {loading && (\n        <Card className=\"flex-1\">\n          <Line options={options} data={labels} />\n        </Card>\n      )}\n      {loading && (\n        <Card className=\"w-1/3 ml-3\">\n          <Bar options={optionsPie} data={pieData} />\n        </Card>\n      )}\n    </div>\n  );\n}\n\nexport { options, optionsPie };\nexport default LineChart;\n","const Title = ({ text }: { text: string }) => (\n  <div className=\"text-2xl font-bold  text-primary\">{text}</div>\n);\n\nexport default Title;\n","import { Paper } from \"@mui/material\";\nimport Title from \"./Title\";\n\nconst Purpose = () => (\n  <Paper className=\"w-3/12 ml-16 p-2\">\n    <Title text={\"Purpose\"}></Title>\n    Listening to people's questions and concerns is an important way for health\n    authorities to learn about what matters to communities in response to\n    COVID-19.\n  </Paper>\n);\n\nexport default Purpose;\n","import {Card, Chip} from \"@mui/material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport {months} from \"../constants\";\nconst Tweet = ({tweet}) => {\n    const created_date = new Date(tweet.created_at);\n    return (\n        <Card className=\"p-5 mb-2\" variant=\"outlined\">\n            <div>\n                <PersonIcon />\n                <span className=\"text-primary\"> {tweet.username}</span> on{\" \"}\n                <span className=\"text-primary\">\n                    {months[created_date.getMonth()]} {created_date.getDate()},{\" \"}\n                    {created_date.getFullYear()}\n                </span>\n            </div>\n            {tweet.text}\n            <div className=\"mt-1\">\n                {tweet &&\n                    Object.keys(tweet)\n                        .filter(\n                            (col) =>\n                                col !== \"id\" &&\n                                col !== \"created_at\" &&\n                                col !== \"text\" &&\n                                col !== \"username\",\n                        )\n                        .map((rowElement) => {\n                            if (tweet[rowElement]) {\n                                return (\n                                    <Chip\n                                        className=\"mr-1\"\n                                        label={rowElement}\n                                        color=\"success\"\n                                    />\n                                );\n                            } else {\n                                return <></>;\n                            }\n                        })}\n            </div>\n        </Card>\n    );\n};\n\nexport default Tweet;\n","import { Card } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { columns } from \"../constants\";\nimport Selection from \"./Selection\";\nimport Tweet from \"./Tweet\";\nconst Tweets = () => {\n  const [dataList, setDataList] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [topic, setTopic] = useState(\"none\");\n  const [reload, setReload] = useState(true);\n  const [description, setDescription] = useState(\"All tweets.\");\n  useEffect(() => {\n    axios\n      .get(\n        `/tweets/?offset=${offset}&limit=10${\n          topic !== `none` ? `&filter_topic=${topic}` : \"\"\n        }`\n      )\n      .then((data) => data.data)\n      .then((data) => {\n        console.log(data);\n        setDataList((dl) => [...dl, ...data]);\n      });\n  }, [offset, topic]);\n  useEffect(() => {\n    axios\n      .get(\n        `/tweets/?offset=0&limit=10${\n          topic !== `none` ? `&filter_topic=${topic}` : \"\"\n        }`\n      )\n      .then((data) => data.data)\n      .then((data) => {\n        console.log(data);\n        setDataList(data);\n      });\n  }, [reload, topic]);\n\n  useEffect(() => {\n    const current_descrip =\n      topic !== \"none\"\n        ? columns.filter((column) => column.field === topic)[0].description\n        : \"All tweets.\";\n    setDescription(current_descrip);\n  }, [reload, topic]);\n\n  const fetchData = () => {\n    setOffset(offset + 10);\n  };\n  const toggleReload = () => {\n    setReload(!reload);\n  };\n\n  return (\n    <div className=\"w-11/12 items-stretch flex justify-between mx-auto \">\n      <Card className=\"w-3/12 mr-3 p-3 h-96\">\n        <div className=\"font-bold text-center text-2xl text-primary\">\n          Filter\n        </div>\n        <Selection\n          offset={offset}\n          setOffset={setOffset}\n          topic={topic}\n          toggleReload={toggleReload}\n          endUser={true}\n          setTopic={setTopic}\n        />\n        <div className=\"text-base\">{description}</div>\n      </Card>\n      <div className=\"w-3/4 overflow-y-auto\">\n        <InfiniteScroll\n          dataLength={dataList.length} //This is important field to render the next data\n          next={fetchData}\n          height={384}\n          hasMore={true}\n          loader={<h4>Loading...</h4>}\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          {dataList.map((datum) => (\n            <Tweet tweet={datum} key={datum.id} />\n          ))}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n};\n\nexport default Tweets;\n","import LineChart from \"./LineChart\";\nimport Nav from \"./Nav\";\nimport Purpose from \"./Purpose\";\nimport Tweets from \"./Tweets\";\n\nconst EndUser = () => {\n  return (\n    <div>\n      <Nav />\n      <div className=\" bg-blue-50\">\n        <Purpose />\n        {/* <Worker /> */}\n        <LineChart />\n        <Tweets />\n      </div>\n    </div>\n  );\n};\n\nexport default EndUser;\n","import DialogTitle from \"@mui/material/DialogTitle\";\nimport { Button, Card, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAuth } from \"./AuthProvider\";\nimport { useLocation, useNavigate } from \"react-router\";\n\nexport default function Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const auth = useAuth();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    auth.signin(username, password, () => {\n      // Send them back to the page they tried to visit when they were\n      // redirected to the login page. Use { replace: true } so we don't create\n      // another entry in the history stack for the login page.  This means that\n      // when they get to the protected page and click the back button, they\n      // won't end up back on the login page, which is also really nice for the\n      // user experience.\n      const from = location.state?.from?.pathname || \"/\";\n\n      navigate(from, { replace: true });\n    });\n  }\n\n  return (\n    <Card className=\"w-1/3 mx-auto mt-10 p-4\">\n      <DialogTitle className=\"text-center\">EpiSuS Login</DialogTitle>\n      <form className=\" flex flex-col items-center\" onSubmit={handleSubmit}>\n        <div className=\"my-2\">\n          <TextField\n            id=\"outlined-username\"\n            label=\"Username\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <TextField\n            id=\"outlined-password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </div>\n        <Button type=\"submit\" variant=\"contained\">\n          Login\n        </Button>\n      </form>\n    </Card>\n  );\n}\n","import { Navigate, useLocation } from \"react-router\";\nimport { useAuth } from \"./AuthProvider\";\n\nexport default function RequireAuth({ children }) {\n  let auth = useAuth();\n  let location = useLocation();\n\n  if (!auth.user) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\n","import { Route, Routes } from 'react-router';\nimport Admin from './components/Admin';\nimport TweetCollectionAdminPanel from './components/Admin/TweetCollectionAdminPanel';\nimport AuthProvider from './components/AuthProvider';\nimport EndUser from './components/EndUser';\nimport Login from './components/Login';\nimport RequireAuth from './components/RequireAuth';\n\nfunction App() {\n  return (\n    <AuthProvider>\n   <Routes>\n     <Route path=\"/\" element={<EndUser />} />\n     <Route path=\"/login\" element={<Login />} />\n      <Route\n            path=\"/ap\"\n            element={\n              <RequireAuth>\n                <Admin />\n              </RequireAuth>\n            }\n          >\n            <Route\n          path=\"modify\"\n          element={<TweetCollectionAdminPanel action=\"modify\" />}\n        />\n        <Route\n          index\n          element={<TweetCollectionAdminPanel action=\"verify\" />}\n        />\n            </Route>\n   </Routes>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { render } from \"react-dom\";\n// import './styles/tailwind.css';\nimport \"./index.css\";\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nrender(\n  <StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </StrictMode>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}